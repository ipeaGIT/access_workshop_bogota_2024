[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "1. Intro to the workshop",
    "section": "",
    "text": "This website provides the supporting material for the Workshop “A crash course on urban accessibility with R”. The Workshop will be conducted during the 2024 WSTLUR (World Symposium on Transport and Land Use Research), which will be hosted by the Universidad de Los Andes, in Bogota, Colombia. The workshop is sponsored by the World Society Transport and Land Use Research (WSTLUR).\n\n\n\n\n\n\n\nWorkshop Summary:\nRouting and accessibility analyses are increasingly used in urban and transport research and planning. In this workshop, you will learn how to estimate travel time matrices and perform accessibility analyzes in multimodal transport networks using the {r5r} and {accessibility} packages in the R programming language.\nThe workshop will also illustrate how to calculate different measures of inequality of access to opportunities and accessibility poverty, which are crucial to assess the accessibility impacts of transportation projects from a transportation equity perspective. The course is based on the book “Introduction to urban accessibility: a practical guide with R” (Pereira and Herszenhut 2023).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{r5r} is an R package for rapid realistic routing on multimodal transport networks (walk, bike, public transport and car). It provides a simple and friendly interface to R5, the Rapid Realistic Routing on Real-world and Reimagined networks, the routing engine developed independently by Conveyal. Kudos to Conveyal for their amazing work.\n\n\n\nHere are a few introductory slides explaining what we cover and what we do not cover in this workshop:\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis workshop assumes the attendee has a basic knowledge of the R programming language. If you want to familiarize yourself with R, we recommend the books below:\n\nR for Data Science\nGeocomputation with R\nData Science in R (in Portuguese)\n\n\n\n\n\nRecommended reading:\nExtra reading material relevant (but not required) for the workshop.\n\nOnline book “Introduction to urban accessibility a practical guide with R” (Pereira and Herszenhut 2023) - Chapters 3 and 6.\nThe {accessibility} package website and documentation.\nThe {r5r} package website and documentation.\nPaper of the {r5r} package, by Pereira et al. (2021).\nPaper on transportation equity measures, by Karner, Pereira, and Farber (2024).\nTransport Access Manual, by Levinson and King (2020).\n\n\n\nAbout the instructor:\nRafael H. M. Pereira  Head of Data Science  Institute for Applied Economic Research (Ipea), Brazil  Website | Google Scholar | Twitter | Linkedin |\nShort bio of the instructor:\nRafael H. M. Pereira is a senior researcher in the fields of urban analytics, spatial data science and transport studies at the Institute for Applied Economic Research (Ipea), Brazil. His research looks broadly at how urban policies and technologies shape the spatial organization of cities, human mobility as well as their impacts on social and health inequalities. Some of his key contributions to the fields of urban analytics and planning involve the development of new methods and open-source computational tools to the study of urban systems and transportation networks. These contributions emerge from substantive interests around social justice and sustainability issues in urban development, with particular focus on transportation equity and inequalities in access to opportunities, and the environmental impacts of built environments and mobility patterns. With a background in Sociology and Demography, Dr. Pereira obtained his PhD in Geography from the Transport Studies Unit at Oxford University.\n\n\n\n\nReferences\n\nKarner, Alex, Rafael H. M. Pereira, and Steven Farber. 2024. “Advances and Pitfalls in Measuring Transportation Equity.” Transportation, January. https://doi.org/10.1007/s11116-023-10460-7.\n\n\nLevinson, David, and David King. 2020. Transport Access Manual: A Guide for Measuring Connection Between People and Places. Committee of the Transport Access Manual, University of Sydney. https://ses.library.usyd.edu.au/handle/2123/23733.\n\n\nPereira, Rafael H. M., and Daniel Herszenhut. 2023. Introduction to Urban Accessibility: A Practical Guide with r. 1st ed. Instituto de Pesquisa Econômica Aplicada (Ipea). https://doi.org/10.38116/9786556350653.\n\n\nPereira, Rafael H. M., Marcus Saraiva, Daniel Herszenhut, Carlos Kaue Vieira Braga, and Matthew Wigginton Conway. 2021. “R5r: Rapid Realistic Routing on Multimodal Transport Networks with R5 in R.” Transport Findings, March, 21262. https://doi.org/10.32866/001c.21262.",
    "crumbs": [
      "1. Intro to the workshop"
    ]
  },
  {
    "objectID": "3.2_flexible_approach.html",
    "href": "3.2_flexible_approach.html",
    "title": "Flexible approach",
    "section": "",
    "text": "In the the previous section, we learned a ‘quick approach’ to calculate accessibility directly from within {r5r}. A shortcoming of this approach is that it is limited to only a few predefined accessibility metrics available in {r5r}. Oftentimes, we want to analyze other types of accessibility metrics and/or to have more control of the different steps of the analysis.\nIn this section, we’ll learn how to calculate travel time matrices and to use them to compute different types of accessibility metrics. This is a more ‘flexible’ approach that combines the capabilities of the {r5r} and the {accessibility} packages. We’ll use again the sample data for the city of Porto Alegre, Brazil, that comes with the {r5r} package.\nThis flexible approach to calculate accessibility only involves 3 steps:\nNow let’s start loading the packages we need:\n# allocating memory to java\noptions(java.parameters = \"-Xmx6G\")\n\nlibrary(r5r)\nlibrary(accessibility)\nlibrary(h3jsr)\nlibrary(dplyr)\nlibrary(mapview)\nlibrary(ggplot2)",
    "crumbs": [
      "3. Calculating accessibility",
      "Flexible approach"
    ]
  },
  {
    "objectID": "3.2_flexible_approach.html#cumulative-accessibility-measure",
    "href": "3.2_flexible_approach.html#cumulative-accessibility-measure",
    "title": "Flexible approach",
    "section": "3.1 Cumulative accessibility measure",
    "text": "3.1 Cumulative accessibility measure\n\nThreshold-based cumulative accessibility\nTo calculate a traditional cumulative accessibility measure, we can use the accessibility::cumulative_cutoff() function. Along with the travel matrix and land use data sets, we only need to pass the name of the column with the travel time values, the name of the column with the count of opportunities, and a travel time cutoff.\nHere, we calculate the number of schools accessible in 20 minutes.\n\n# threshold-based cumulative accessibility\naccess_cum_t &lt;- accessibility::cumulative_cutoff(\n  travel_matrix = ttm, \n  land_use_data = points,\n  travel_cost = 'travel_time_p50',\n  opportunity = 'schools',\n  cutoff = 20\n  )\n  \nhead(access_cum_t)\n\n                id schools\n            &lt;char&gt;   &lt;int&gt;\n1: 89a9012124fffff       1\n2: 89a9012126bffff       3\n3: 89a9012127bffff       3\n4: 89a90128003ffff       8\n5: 89a90128007ffff       6\n6: 89a9012800bffff       9\n\n\n\n\nInterval-based cumulative accessibility\nPrevious studies have shown that the ad-hoc choice of a single travel time threshold can substantially influence the results of traditional cumulative accessibility measures, introducing bias into transport project evaluations and equity analyses (Pereira 2019). To overcome this issue, we have proposed a time interval cumulative accessibility measure (Tomasiello et al. 2023). This new metric estimates the average (or the median) number of opportunities that can be reached considering multiple minute-by-minute cutoffs within a given travel time interval.\nThe main advantage of this metric is that it mitigates the impacts of arbitrary choices of trip duration on accessibility analysis while preserving the computation and communicability advantages of threshold-based cumulative measures.\nHere, we calculate the average number of schools that can be reached between 20 and 30 minutes.\n\n# interval-based cumulative accessibility\naccess_cum_i &lt;- accessibility::cumulative_interval(\n  travel_matrix = ttm, \n  land_use_data = points,\n  travel_cost = 'travel_time_p50',\n  opportunity = 'schools',\n  interval = c(15,25),\n  summary_function = mean\n  )\n  \nhead(access_cum_i)\n\n                id schools\n            &lt;char&gt;   &lt;int&gt;\n1: 89a9012124fffff       1\n2: 89a9012126bffff       4\n3: 89a9012127bffff       4\n4: 89a90128003ffff       7\n5: 89a90128007ffff       7\n6: 89a9012800bffff       9",
    "crumbs": [
      "3. Calculating accessibility",
      "Flexible approach"
    ]
  },
  {
    "objectID": "3.2_flexible_approach.html#gravity-based-accessibility-measures",
    "href": "3.2_flexible_approach.html#gravity-based-accessibility-measures",
    "title": "Flexible approach",
    "section": "3.2 Gravity-based accessibility measures",
    "text": "3.2 Gravity-based accessibility measures\nThe package also includes accessibility::gravity() to calculate gravity-based accessibility metrics in a very flexible way.\nIt includes a decay_function parameter that can receive any function to convert travel cost into an impedance factor used to weight opportunities. For convenience, the package currently includes the following functions:\n\ndecay_binary()\ndecay_exponential()\ndecay_linear()\ndecay_logistic()\ndecay_power()\ndecay_stepped()\n\nLet’s see a couple examples with logistic and negative exponential decay functions:\n\n# logistic decay\naccess_lgst &lt;- gravity(\n  travel_matrix = ttm,\n  land_use_data = points,\n  decay_function = decay_logistic(cutoff = 15, sd = 5),\n  opportunity = \"schools\",\n  travel_cost = \"travel_time_p50\"\n)\n\n# negative exponential decay\naccess_nexp &lt;- gravity(\n  travel_matrix = ttm,\n  land_use_data = points,\n  decay_function = decay_exponential(decay_value = 0.1),\n  opportunity = \"schools\",\n  travel_cost = \"travel_time_p50\"\n)\n\nHere’s a quick visualization of the shape of the decay curves we’ve used.\n\n\nCode\nnegative_exp &lt;- decay_exponential(decay_value = 0.1)\nlogistic &lt;- decay_logistic(cutoff = 15, sd = 5)\n\ntravel_costs &lt;- seq(0, 30, 0.1)\n\nweights &lt;- data.frame(\n  minutes = travel_costs,\n  negative_exp = negative_exp(travel_costs)[[\"0.1\"]],\n  logistic = logistic(travel_costs)[[\"c15;sd5\"]]\n)\n\n# reshape data to long format\nweights &lt;- tidyr::pivot_longer(\n  weights,\n  cols = c('negative_exp',  'logistic'),\n  names_to = \"decay_function\",\n  values_to = \"weights\"\n)\n\nggplot(weights) +\n  geom_line(aes(minutes, weights, color = decay_function),\n            show.legend = FALSE) +\n  facet_wrap(. ~ decay_function, ncol = 2) +\n  theme_minimal()",
    "crumbs": [
      "3. Calculating accessibility",
      "Flexible approach"
    ]
  },
  {
    "objectID": "2.2_data_requirements.html",
    "href": "2.2_data_requirements.html",
    "title": "Data requirements",
    "section": "",
    "text": "In order to conduct transport routing and accessibility analysis using the {r5r} package, you will need a few input data sets:\n\nA road network from OpenStreetMap (OSM) in .pbf format (mandatory).\nA public transport feed inGTFS.zip format (optional).\nA raster file with Digital Elevation Model data in .tif format (optional).\nSome data on the spatial distribution of population and/or activities such as employment, schools, health care facilities.\n\nThe data sets we’ll use in this workshop are provided with the code exercises. If you would like to find similar data for you other regions in the world, here are a few data sources. See also slides below.\n\nStreet network (mandatory):\n\n{osmextract}, R package;\nGeofabrik, website;\nHOT Export Tool, website;\nBBBike Extract Service, website.\nProtomaps website\n\nPublic transport network (optional):\n\n{tidytransit}, R package;\nTransitland, website;\nMobility Database website\n\nTopography (optional):\n\n{elevatr}, R package;\nNasa’s SRTMGL1, website.",
    "crumbs": [
      "2. Getting started",
      "Data requirements"
    ]
  },
  {
    "objectID": "2.1_installation.html",
    "href": "2.1_installation.html",
    "title": "Installation",
    "section": "",
    "text": "To follow the workshop, you should have the following programs installed on your machine before the day of the workshop.\n\nR and RStudio\nA few R packages\nJava JDK 21\n\nSee instructions below:\n\n\n\n\nInstalling R and RStudio\nWe assume you already have R and RStudio installed on your machine. In case you don’t, follow these simple instructions here.\n\n\nInstalling R packages\nThe workshop uses a few R packages that need to be installed on your machine. The simplest way to do this is running the code below. This might take a few minutes if this is the first time you install these packages.\n\npkgs &lt;- c(\n  'r5r',\n  'accessibility',\n  'ggplot2',\n  'mapview',\n  'dplyr',\n  'h3jsr',\n  'sf'\n  )\n\ninstall.packages(pkgs)\n\nThe safest way to replicate the code of this workshop, though, is cloning its repository locally. This is because this repository uses the {renv} R package to manage the package dependencies of the code we use. This is important to make sure we are using the same versions of the relevant packages.\nOnce you have cloned the repo and you’ve opened the access_workshop_bogota_2024.Rproj file, you can simply run renv::restore() to install all the package dependencies used in this workshop.\n\n# uncomment the line below in case you need to install the {renv} package\n# install.packages('renv')\nrenv::restore()\n\n\n\nInstalling Java JDK\nTo use the {r5r} package (version v2.0 or higher), you will need to have Java Development Kit (JDK) 21 installed on your computer. There are numerous open-source JDK implementations. The easiest way to install JDK is using the new {rJavaEnv} package in R, developed by Egor Kotov (thanks Egor!).\n\n# install dev version of {rJavaEnv}\nremotes::install_github(\"e-kotov/rJavaEnv\")\n\n# check version of JDK currently installed (if any) \nrJavaEnv::java_check_version_rjava()\n\n# install JDK 21\nrJavaEnv::java_quick_install(\n  version = 21,\n  distribution = 'Corretto')\n\nAlternatively, you can manually download and install any of these options:\n\nAdoptium/Eclipse Temurin\nAmazon Corretto\nOracle OpenJDK\n\nAccompanying slides explaining the computational requirements to conduct transport routing and accessibility analysis with R.",
    "crumbs": [
      "2. Getting started",
      "Installation"
    ]
  },
  {
    "objectID": "3.1_quick_approach.html",
    "href": "3.1_quick_approach.html",
    "title": "Quick approach",
    "section": "",
    "text": "In this first hands-on section of the workshop, we’ll learn a very quick and simple way to calculate spatial accessibility using the {r5r} package. In the next section, we’ll see a more flexible and robust way to do the same thing. Here we’ll be calculating the number of schools accessible by public transport within a travel time of 20 minutes.\n\n1. Allocating memory to Java & loading packages\nFirst, let’s increase the memory available to run Java, which is used by the underlying R5 routing engine. To increase the available memory to 2 GB, for example, we use the following command. Note that this needs to be run before loading the packages that will be used in our analysis.\n\noptions(java.parameters = \"-Xmx2G\")\n\nNow we can load the packages we’ll use in this section:\n\nlibrary(r5r)\nlibrary(h3jsr)\nlibrary(dplyr)\nlibrary(mapview)\nlibrary(ggplot2)\n\n\n\n2. A quick look at our sample data\nOur case study is the city of Porto Alegre, Brazil. The {r5r} package brings a small sample data for this city, including the following files:\n\nAn OpenStreetMap network: poa_osm.pbf\nTwo public transport GTFS feeds: poa_eptc.zip (buses) and poa_trensurb.zip (trains)\nA raster elevation data: poa_elevation.tif\nA data frame with land use data: poa_hexgrid.csv file with the centroids of a regular hexagonal grid covering the sample area. The data frame also indicates the number of residents and schools in each cell. We’ll use these points as origins and destinations in our analysis.\n\nThese data sets should be saved in a single directory (our data_path). Here’s how the land use data looks like:\n\n# path to data directory\ndata_path &lt;- system.file(\"extdata/poa\", package = \"r5r\")\n\n# read points data\npoints &lt;- read.csv(file.path(data_path, \"poa_hexgrid.csv\"))\nhead(points)\n\n               id       lon       lat population schools jobs healthcare\n1 89a901291abffff -51.15825 -30.05385          0       0 1214          0\n2 89a9012a3cfffff -51.21187 -30.10058        159       0    0          0\n3 89a901295b7ffff -51.16521 -30.07544       1008       0    3          1\n4 89a901284a3ffff -51.20535 -30.09005         92       0    0          0\n5 89a9012809bffff -51.19575 -30.07839        577       0    9          0\n6 89a901285cfffff -51.21108 -30.08124       1170       0  427          0\n\n\n🔎 To visualize the spatial distribution of these data, we can retrieve the geometry of the H3 hexagonal grid and explore it using an interactive map:\n\n# retrieve polygons of H3 spatial grid\ngrid &lt;- h3jsr::cell_to_polygon(\n  points$id,\n  simple = FALSE\n  )\n\n# merge spatial grid with land use data\ngrid_poa &lt;- left_join(\n  grid,\n  points,\n  by = c('h3_address'='id')\n  )\n\n# interactive map\nmapview(grid_poa, zcol = 'population')\n\n\n\n\n\n\n\n3. Building a routable transport network\nThis quick approach to calculate accessibility involves only 2 steps. The first step is to build the multimodal transport network using the r5r::setup_r5() function.\n\nr5r_core &lt;- r5r::setup_r5(data_path, \n                          verbose = FALSE)\n\nAs you can see, we only need to pass the path to our data directory to the r5r::setup_r5() function. The function then combines the OSM, GTFS and elevation data in this directory to create a graph that is used for routing trips between origin-destination pairs and, consequently, for calculating travel time matrices and accessibility.\n\n\n4. Calculating access: quick approach\nIn the second step, you can calculate accessibility estimates in a single call using the r5r::accessibility() function. It includes different options of decay functions to compute cumulative accessibility measures and different gravity-based metrics.\nIn this example, we calculate the cumulative accessibility of the number of schools and hospitals accessible in less than 20 minutes by public transport. Thus, we’ll be using decay_function = \"step\".\nNote that to use r5r::accessibility(), the input of points must be a data.frame with columns indicating:\n\nthe id of each location\nspatial coordinates lat and lon\nthe number of activities in each location. The name of this column has to be passed to the opportunities_colnames parameter.\n\n\n# routing inputs\nmode &lt;- c(\"walk\", \"transit\")\n1max_walk_time &lt;- 30\ntravel_time_cutoff &lt;- 20\ndeparture_datetime &lt;- as.POSIXct(\"13-05-2019 14:00:00\",\n                                 format = \"%d-%m-%Y %H:%M:%S\")\n\n# calculate accessibility\naccess1 &lt;- r5r::accessibility(\n  r5r_core = r5r_core,\n  origins = points,\n  destinations = points,\n  mode = mode,\n2  opportunities_colnames = c(\"schools\", \"healthcare\"),\n  decay_function = \"step\",\n3  cutoffs = travel_time_cutoff,\n  departure_datetime = departure_datetime,\n  max_walk_time = max_walk_time,\n  progress = TRUE\n  )\n\n\n1\n\nIn minutes\n\n2\n\nNote you can pass the columns of more than one type of opportunity.\n\n3\n\nSimilarly, you could pass more than one time threshold.\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nNote that the r5r::accessibility() function has several additional parameters that allow you to specify different characteristics of trips, including a maximum trip duration, walking and cycling speed, level of traffic stress (LTS), etc. For more info, check the documentation of the function by calling ?r5r::accessibility in your R Console or check the documentation on {r5r} website.\n\n\nThe output is a data.frame that shows for every origin id the number of opportunities that can be reached:\n\nhead(access1)\n\n                id opportunity percentile cutoff accessibility\n            &lt;char&gt;      &lt;char&gt;      &lt;int&gt;  &lt;int&gt;         &lt;num&gt;\n1: 89a901291abffff     schools         50     20             3\n2: 89a901291abffff  healthcare         50     20             6\n3: 89a9012a3cfffff     schools         50     20             0\n4: 89a9012a3cfffff  healthcare         50     20             0\n5: 89a901295b7ffff     schools         50     20             6\n6: 89a901295b7ffff  healthcare         50     20             4\n\n\n\n\n5. Accessibility map\nNow it is super simple to merge these accessibility estimates to our spatial grid to visualize these results on a map.\n\n# merge spatial grid with accessibility estimates\naccess_sf &lt;- left_join(\n  grid, \n  access1, \n  by = c('h3_address'='id')\n  )\n\n# plot\nggplot() +\n  geom_sf(data = access_sf, aes(fill = accessibility), color= NA) +\n  scale_fill_viridis_c(direction = -1, option = 'B') +\n  labs(title = 'Number of schools and hospitals accessible by public transport in 20 minutes',\n       fill = 'Number of\\nfacilities') +\n  theme_minimal() +\n  theme(axis.title = element_blank()) +\n  facet_wrap(~opportunity) +\n  theme_void()",
    "crumbs": [
      "3. Calculating accessibility",
      "Quick approach"
    ]
  },
  {
    "objectID": "3.3_equity_measures.html",
    "href": "3.3_equity_measures.html",
    "title": "Equity measures",
    "section": "",
    "text": "A central question in transportation research and practice involves assessing how the accessibility benefits of transportation systems and projects are distributed across different socioeconomic and demographic groups. Transportation equity concerns are fundamentally related to two types of issues: (1) accessibility inequality and (2) accessibility poverty. In this section you will learn how to use the {accessibility} package to calculate different indicators of accessibility inequality and poverty.\nIn a recent paper, we discussed the advantages and disadvantages of various inequality and poverty metrics most commonly used in the transport literature (Karner, Pereira, and Farber 2024) - ungated PDF here. The slides below give a very short summary of some ideas discussed in the paper. Just enough to follow this workshop section. Nonetheless, I would strongly recommend reading the whole paper.\nIn this section, we’ll be using a couple sample data sets for the city of Belo Horizonte (Brazil), which come with the {accessibility} package. In the code chunk below, we read the travel time matrix and land use data, and calculate the average number of jobs accessible in 30 by public transport.\nlibrary(accessibility)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# path to data\ndata_dir &lt;- system.file(\"extdata\", package = \"accessibility\")\n\n# read travel matrix and land use data\nttm &lt;- readRDS(file.path(data_dir, \"travel_matrix.rds\"))\nlud &lt;- readRDS(file.path(data_dir, \"land_use_data.rds\"))\n\n# calculate threshold-based cumulative access\naccess_df &lt;- cumulative_cutoff(\n  travel_matrix = ttm,\n  land_use_data = lud,\n  opportunity = \"jobs\",\n  travel_cost = \"travel_time\",\n  cutoff = 30\n  )\n\nhead(access_df)\n\n                id  jobs\n            &lt;char&gt; &lt;int&gt;\n1: 89a881a5a2bffff 14561\n2: 89a881a5a2fffff 29452\n3: 89a881a5a67ffff 16647\n4: 89a881a5a6bffff 10700\n5: 89a881a5a6fffff  6669\n6: 89a881a5b03ffff 37029\n🔎 Time for a quick visual inspection! We can merge our accessibility results with the land use/population data, and visualize how employment accessibility is distributed across different income groups.\n# merge acces and land use data\ndf &lt;- access_df |&gt;\n      rename(jobs_access = jobs) |&gt;\n      left_join(lud, by='id')\n\n# remove spatial units with no population\ndf &lt;- filter(df, population &gt; 0)\n\n# box plot\nggplot(data = df) +\n  geom_boxplot(show.legend = FALSE,\n               aes(x = income_decile, \n                   y = jobs_access / 1000, \n                   weight = population, \n                   color = income_decile)) +\n  scale_colour_brewer(palette = 'RdBu') + \n  labs(subtitle = 'Number of jobs accessible in 30 minutes by public transport',\n       x = 'Income decile', y = 'Jobs (in thousands)') +\n  scale_x_discrete(labels = c(\"D1\\npoorest\", \n                              paste0(\"D\", 2:9), \n                              \"D10\\nwealthiest\")) +\n  theme_minimal()\nThe box plot shows a very uneven distribution of access to job opportunities. Now let’s check what we can learn about accessibility inequality and poverty in this region with a few examples.",
    "crumbs": [
      "3. Calculating accessibility",
      "Equity measures"
    ]
  },
  {
    "objectID": "3.3_equity_measures.html#palma-ratio",
    "href": "3.3_equity_measures.html#palma-ratio",
    "title": "Equity measures",
    "section": "Palma ratio",
    "text": "Palma ratio\nThe Palma ratio is calculated as the average access of the richest 10% divided by the average access of the poorest 40%. Palma Ratio values higher than 1 indicate that the wealthiest population has higher accessibility levels than the poorest, whereas values lower than 1 indicate the opposite situation.\nIn the example here, we see that the wealthiest population can access on average 3.8 times more jobs than the poor population.\n\npalma &lt;- palma_ratio(\n  accessibility_data = access_df,\n  sociodemographic_data = lud,\n  opportunity = \"jobs\",\n  population = \"population\",\n  income = \"income_per_capita\"\n  )\n\npalma\n\n   palma_ratio\n         &lt;num&gt;\n1:    3.800465",
    "crumbs": [
      "3. Calculating accessibility",
      "Equity measures"
    ]
  },
  {
    "objectID": "3.3_equity_measures.html#concentration-index",
    "href": "3.3_equity_measures.html#concentration-index",
    "title": "Equity measures",
    "section": "Concentration index",
    "text": "Concentration index\nThe concentration index (CI) estimates the extent to which accessibility inequalities are systematically associated with individuals’ socioeconomic levels. CI values can theoretically vary between -1 and 1 (when all accessibility is concentrated in the most or in the least disadvantaged person, respectively). Negative values indicate that inequalities favor the poor, while positive values indicate a pro-rich bias.\n\nci &lt;- accessibility::concentration_index(\n  accessibility_data = access_df,\n  sociodemographic_data = lud,\n  opportunity = \"jobs\",\n  population = \"population\",\n  income = \"income_per_capita\",\n  type = \"corrected\"\n  )\n\nci\n\n   concentration_index\n                 &lt;num&gt;\n1:           0.3346494",
    "crumbs": [
      "3. Calculating accessibility",
      "Equity measures"
    ]
  },
  {
    "objectID": "3.3_equity_measures.html#gini-index",
    "href": "3.3_equity_measures.html#gini-index",
    "title": "Equity measures",
    "section": "Gini index",
    "text": "Gini index\nYou probably shouldn’t use the Gini index to measure accessibility inequality (see Karner, Pereira, and Farber 2024).",
    "crumbs": [
      "3. Calculating accessibility",
      "Equity measures"
    ]
  },
  {
    "objectID": "3.3_equity_measures.html#foster-greer-thorbecke-fgt-poverty-measures",
    "href": "3.3_equity_measures.html#foster-greer-thorbecke-fgt-poverty-measures",
    "title": "Equity measures",
    "section": "Foster-Greer-Thorbecke (FGT) poverty measures",
    "text": "Foster-Greer-Thorbecke (FGT) poverty measures\nThe fgt_poverty() function calculates the FGT metrics, a family of poverty measures originally proposed by Foster, Greer, and Thorbecke (1984), and which that can be used to capture the extent and severity of poverty within an accessibility distribution. The FGT family is composed of three measures:\n\nFGT0: it captures the extent of poverty as a simple headcount - i.e. the proportion of people below the poverty line;\nFGT1: also know as the “poverty gap index”, it captures the severity of poverty as the average percentage distance between the poverty line and the accessibility of individuals below the poverty line;\nFGT2: it simultaneously captures the extent and the severity of poverty by calculating the number of people below the poverty line weighted by the size of the accessibility shortfall relative to the poverty line.\n\nThis function includes an additional poverty_line parameter, used to define the poverty line below which individuals are considered to be in accessibility poverty. For the sake of this exercise, we’ll consider the lowest 25th percentile of access as our poverty line, which in this example is approximately 23 thousand jobs.\n\n\n\n\n\n\nQuick reminder that the definition of an accessibility poverty line is ultimately a moral and political decision and not simply an empirical or technical question (Pereira, Schwanen, and Banister 2017; Lucas et al. 2019).\n\n\n\n\n# get the 25th percentile of access\nquant25 &lt;- quantile(access_df$jobs, .25)\n\npoverty &lt;- fgt_poverty(\n  accessibility_data =  access_df,\n  sociodemographic_data = lud,\n  opportunity = \"jobs\",\n  population = \"population\",\n  poverty_line = quant25\n  )\n\npoverty\n\n        FGT0       FGT1       FGT2\n       &lt;num&gt;      &lt;num&gt;      &lt;num&gt;\n1: 0.1478675 0.04948043 0.02862334\n\n\nQuick interpretation:\n\nFGT0: 14.8% of the population are in accessibility poverty\nFGT1: the accessibility of those living in accessibility poverty is on average 5% lower than the poverty line\nFGT2: it has no clear interpretation, but one could say that the overall poverty level/intensity is 2.8%.",
    "crumbs": [
      "3. Calculating accessibility",
      "Equity measures"
    ]
  }
]